import React, { useState, useEffect, useRef } from 'react';
import { X, Save, Edit3, FileText, AlertCircle, Download, Eye, EyeOff } from 'lucide-react';

interface TemplateEditorProps {
    initialContent: string;
    onSave: (content: string) => void;
    onClose: () => void;
}

const TemplateEditor: React.FC<TemplateEditorProps> = ({ initialContent, onSave, onClose }) => {
    const [content, setContent] = useState(initialContent);
    const [isVisible, setIsVisible] = useState(false);
    const [isSaving, setIsSaving] = useState(false);
    const [hasChanges, setHasChanges] = useState(false);
    const [viewMode, setViewMode] = useState<'edit' | 'preview'>('preview');
    const [isGeneratingPDF, setIsGeneratingPDF] = useState(false);
    const [isEditingInPDF, setIsEditingInPDF] = useState(false);
    const [editingSection, setEditingSection] = useState<string | null>(null);
    const [tempContent, setTempContent] = useState('');
    const previewRef = useRef<HTMLDivElement>(null);

    useEffect(() => {
        setContent(initialContent || '');
        setIsVisible(true);
    }, [initialContent]);

    useEffect(() => {
        setHasChanges(content !== initialContent);
    }, [content, initialContent]);

    const generatePDF = async () => {
        setIsGeneratingPDF(true);
        
        try {
            // Create a new window for PDF generation
            const printWindow = window.open('', '_blank');
            if (!printWindow) {
                throw new Error('Unable to open print window');
            }

            // PDF-optimized HTML content
            const pdfContent = `
                <!DOCTYPE html>
                <html>
                <head>
                    <title>Template Document</title>
                    <style>
                        @page {
                            size: A4;
                            margin: 20mm;
                        }
                        body {
                            font-family: 'Times New Roman', serif;
                            font-size: 12pt;
                            line-height: 1.6;
                            color: #333;
                            margin: 0;
                            padding: 0;
                        }
                        h1 { font-size: 24pt; margin-bottom: 20pt; color: #2563eb; }
                        h2 { font-size: 18pt; margin-bottom: 15pt; color: #1e40af; }
                        h3 { font-size: 14pt; margin-bottom: 12pt; color: #1e3a8a; }
                        p { margin-bottom: 12pt; text-align: justify; }
                        ul, ol { margin-bottom: 12pt; padding-left: 20pt; }
                        li { margin-bottom: 6pt; }
                        .header {
                            text-align: center;
                            border-bottom: 2px solid #2563eb;
                            padding-bottom: 10pt;
                            margin-bottom: 30pt;
                        }
                        .footer {
                            position: fixed;
                            bottom: 0;
                            left: 0;
                            right: 0;
                            text-align: center;
                            font-size: 10pt;
                            color: #666;
                            border-top: 1px solid #ddd;
                            padding-top: 10pt;
                        }
                        @media print {
                            body { print-color-adjust: exact; }
                        }
                    </style>
                </head>
                <body>
                    <div class="header">
                        <h1>Template Document</h1>
                        <p style="margin:0; color:#666;">Generated on ${new Date().toLocaleDateString()}</p>
                    </div>
                    <div class="content">
                        ${content.replace(/\n/g, '<br>')}
                    </div>
                    <div class="footer">
                        <p>Page 1 of 1 | Generated by Template Editor</p>
                    </div>
                </body>
                </html>
            `;

            printWindow.document.write(pdfContent);
            printWindow.document.close();
            
            // Wait for content to load then print
            printWindow.onload = () => {
                setTimeout(() => {
                    printWindow.print();
                    printWindow.close();
                }, 500);
            };
        } catch (error) {
            console.error('PDF generation failed:', error);
            alert('PDF generation failed. Please try again.');
        } finally {
            setIsGeneratingPDF(false);
        }
    };

    const handleInlineEdit = (section: string, currentText: string) => {
        setEditingSection(section);
        setTempContent(currentText);
        setIsEditingInPDF(true);
    };

    const handleSaveInlineEdit = () => {
        if (editingSection === 'content') {
            setContent(tempContent);
            setHasChanges(true);
        }
        setEditingSection(null);
        setIsEditingInPDF(false);
        setTempContent('');
    };

    const handleCancelInlineEdit = () => {
        setEditingSection(null);
        setIsEditingInPDF(false);
        setTempContent('');
    };

    const handleSave = async () => {
        setIsSaving(true);
        // Simulate save delay
        await new Promise(resolve => setTimeout(resolve, 800));
        onSave(content);
        setIsSaving(false);
        handleClose();
    };

    const handleClose = () => {
        setIsVisible(false);
        setTimeout(() => {
            onClose();
        }, 300);
    };

    const handleKeyDown = (e: React.KeyboardEvent) => {
        if (e.key === 'Escape') {
            handleClose();
        }
        if (e.key === 's' && (e.ctrlKey || e.metaKey)) {
            e.preventDefault();
            handleSave();
        }
    };

    // Toolbar configuration
    const toolbarOptions = [
        [{ 'size': ['small', false, 'large', 'huge'] }],
        [{ 'header': [1, 2, 3, 4, 5, 6, false] }],
        ['bold', 'italic', 'underline', 'strike'],
        [{ 'color': [] }, { 'background': [] }],
        [{ 'script': 'sub' }, { 'script': 'super' }],
        [{ 'list': 'ordered' }, { 'list': 'bullet' }, { 'indent': '-1' }, { 'indent': '+1' }],
        [{ 'align': [] }],
        ['link', 'image', 'video'],
        ['blockquote', 'code-block'],
        ['clean']
    ];

    const formats = [
        'header', 'size', 'bold', 'italic', 'underline', 'strike',
        'color', 'background', 'script', 'list', 'bullet', 'indent',
        'align', 'link', 'image', 'video', 'blockquote', 'code-block'
    ];

    return (
        <div 
            className={`fixed inset-0 bg-black transition-all duration-300 ease-out z-50 ${
                isVisible ? 'bg-opacity-60 backdrop-blur-sm' : 'bg-opacity-0'
            }`}
            onKeyDown={handleKeyDown}
            tabIndex={-1}
        >
            <div className="flex items-center justify-center min-h-screen p-4">
                <div className={`bg-white rounded-2xl shadow-2xl max-w-6xl w-full max-h-[95vh] overflow-hidden transition-all duration-300 ease-out transform ${
                    isVisible ? 'scale-100 opacity-100' : 'scale-95 opacity-0'
                }`}>
                    {/* Header */}
                    <div className="bg-gradient-to-r from-blue-600 to-purple-600 text-white p-6 flex justify-between items-center">
                        <div className="flex items-center space-x-3">
                            <div className="bg-white bg-opacity-20 p-2 rounded-lg">
                                <Edit3 className="h-6 w-6" />
                            </div>
                            <div>
                                <h4 className="text-xl font-bold">Template Editor</h4>
                                <p className="text-blue-100 text-sm">Create and edit your content with rich formatting</p>
                            </div>
                        </div>
                        <div className="flex items-center space-x-2">
                            {hasChanges && (
                                <div className="flex items-center space-x-1 bg-orange-500 bg-opacity-20 px-3 py-1 rounded-full">
                                    <AlertCircle className="h-4 w-4 text-orange-200" />
                                    <span className="text-sm text-orange-200">Unsaved changes</span>
                                </div>
                            )}
                            <div className="flex bg-white bg-opacity-20 rounded-lg p-1">
                                <button
                                    onClick={() => setViewMode('edit')}
                                    className={`px-3 py-1 rounded-md text-sm transition-all duration-200 ${
                                        viewMode === 'edit' 
                                            ? 'bg-white text-blue-600 shadow-sm' 
                                            : 'text-blue-100 hover:text-white'
                                    }`}
                                >
                                    Code Edit
                                </button>
                                <button
                                    onClick={() => setViewMode('preview')}
                                    className={`px-3 py-1 rounded-md text-sm transition-all duration-200 ${
                                        viewMode === 'preview' 
                                            ? 'bg-white text-blue-600 shadow-sm' 
                                            : 'text-blue-100 hover:text-white'
                                    }`}
                                >
                                    PDF Edit
                                </button>
                            </div>
                            <button
                                onClick={generatePDF}
                                disabled={isGeneratingPDF}
                                className="p-2 rounded-lg hover:bg-white hover:bg-opacity-20 transition-colors duration-200 disabled:opacity-50"
                                title="Generate PDF"
                            >
                                {isGeneratingPDF ? (
                                    <div className="animate-spin rounded-full h-5 w-5 border-2 border-white border-t-transparent"></div>
                                ) : (
                                    <Download className="h-5 w-5" />
                                )}
                            </button>
                            <button
                                onClick={handleClose}
                                className="p-2 rounded-lg hover:bg-white hover:bg-opacity-20 transition-colors duration-200"
                            >
                                <X className="h-6 w-6" />
                            </button>
                        </div>
                    </div>

                    {/* Content */}
                    <div className="flex flex-col h-[calc(95vh-120px)]">
                        {/* Editor/Preview Area */}
                        <div className="flex-1 p-6 overflow-hidden">
                            {viewMode === 'edit' ? (
                                <div className="h-full border-2 border-gray-100 rounded-xl overflow-hidden bg-gray-50">
                                    <div className="h-full flex flex-col">
                                        {/* Simulated Rich Text Editor */}
                                        <div className="border-b border-gray-200 bg-white p-3">
                                            <div className="flex flex-wrap gap-2">
                                                {/* Format buttons */}
                                                <div className="flex border border-gray-300 rounded-lg overflow-hidden">
                                                    <button className="px-3 py-1 text-sm hover:bg-gray-100 border-r border-gray-300">
                                                        <strong>B</strong>
                                                    </button>
                                                    <button className="px-3 py-1 text-sm hover:bg-gray-100 border-r border-gray-300">
                                                        <em>I</em>
                                                    </button>
                                                    <button className="px-3 py-1 text-sm hover:bg-gray-100">
                                                        <u>U</u>
                                                    </button>
                                                </div>
                                                
                                                <div className="flex border border-gray-300 rounded-lg overflow-hidden">
                                                    <button className="px-3 py-1 text-sm hover:bg-gray-100 border-r border-gray-300">H1</button>
                                                    <button className="px-3 py-1 text-sm hover:bg-gray-100 border-r border-gray-300">H2</button>
                                                    <button className="px-3 py-1 text-sm hover:bg-gray-100">H3</button>
                                                </div>
                                                
                                                <div className="flex border border-gray-300 rounded-lg overflow-hidden">
                                                    <button className="px-3 py-1 text-sm hover:bg-gray-100 border-r border-gray-300">• List</button>
                                                    <button className="px-3 py-1 text-sm hover:bg-gray-100">1. List</button>
                                                </div>
                                                
                                                <button className="px-3 py-1 text-sm border border-gray-300 rounded-lg hover:bg-gray-100">
                                                    Link
                                                </button>
                                                <button className="px-3 py-1 text-sm border border-gray-300 rounded-lg hover:bg-gray-100">
                                                    Image
                                                </button>
                                            </div>
                                        </div>
                                        
                                        {/* Text Area */}
                                        <div className="flex-1 p-4 bg-white">
                                            <textarea
                                                value={content}
                                                onChange={(e) => setContent(e.target.value)}
                                                placeholder="Start typing your content here..."
                                                className="w-full h-full resize-none border-none outline-none text-gray-700 leading-relaxed"
                                                style={{ fontFamily: 'system-ui, -apple-system, sans-serif' }}
                                            />
                                        </div>
                                    </div>
                                </div>
                            ) : (
                                /* PDF Edit Mode */
                                <div className="h-full border-2 border-gray-100 rounded-xl overflow-hidden bg-gray-100">
                                    <div className="h-full flex flex-col">
                                        {/* PDF Header */}
                                        <div className="bg-white border-b border-gray-200 p-4">
                                            <div className="flex items-center justify-between">
                                                <div className="flex items-center space-x-2">
                                                    <FileText className="h-5 w-5 text-red-500" />
                                                    <span className="text-sm font-medium text-gray-700">PDF Editor</span>
                                                    <span className="text-xs bg-green-100 text-green-800 px-2 py-1 rounded-full">
                                                        Click to Edit
                                                    </span>
                                                </div>
                                                <div className="flex items-center space-x-2 text-sm text-gray-500">
                                                    <span>A4 Format</span>
                                                    <span>•</span>
                                                    <span>Inline Editing</span>
                                                </div>
                                            </div>
                                        </div>
                                        
                                        {/* PDF Document Editor */}
                                        <div className="flex-1 p-8 overflow-y-auto">
                                            <div className="max-w-4xl mx-auto">
                                                {/* PDF Page */}
                                                <div 
                                                    ref={previewRef}
                                                    className="bg-white rounded-lg shadow-lg p-8 min-h-[297mm] relative"
                                                    style={{ 
                                                        aspectRatio: '210/297',
                                                        fontFamily: 'Times New Roman, serif',
                                                        fontSize: '12pt',
                                                        lineHeight: '1.6'
                                                    }}
                                                >
                                                    {/* PDF Header */}
                                                    <div className="text-center border-b-2 border-blue-600 pb-4 mb-8">
                                                        <h1 className="text-3xl font-bold text-blue-600 mb-2">Template Document</h1>
                                                        <p className="text-gray-600 text-sm">Generated on {new Date().toLocaleDateString()}</p>
                                                    </div>
                                                    
                                                    {/* PDF Content - Editable */}
                                                    <div className="space-y-4 min-h-[400px]">
                                                        {editingSection === 'content' ? (
                                                            /* Inline Editor */
                                                            <div className="relative">
                                                                <textarea
                                                                    value={tempContent}
                                                                    onChange={(e) => setTempContent(e.target.value)}
                                                                    className="w-full min-h-[400px] p-4 border-2 border-blue-300 rounded-lg resize-none focus:outline-none focus:border-blue-500"
                                                                    style={{ 
                                                                        fontFamily: 'Times New Roman, serif',
                                                                        fontSize: '12pt',
                                                                        lineHeight: '1.6'
                                                                    }}
                                                                    placeholder="Start typing your content here..."
                                                                    autoFocus
                                                                />
                                                                <div className="absolute top-2 right-2 flex space-x-2">
                                                                    <button
                                                                        onClick={handleSaveInlineEdit}
                                                                        className="px-3 py-1 bg-green-600 text-white text-sm rounded-md hover:bg-green-700 transition-colors"
                                                                    >
                                                                        Save
                                                                    </button>
                                                                    <button
                                                                        onClick={handleCancelInlineEdit}
                                                                        className="px-3 py-1 bg-gray-600 text-white text-sm rounded-md hover:bg-gray-700 transition-colors"
                                                                    >
                                                                        Cancel
                                                                    </button>
                                                                </div>
                                                            </div>
                                                        ) : (
                                                            /* PDF Content Display */
                                                            <div 
                                                                className="prose max-w-none min-h-[400px] p-4 rounded-lg hover:bg-gray-50 cursor-pointer transition-colors group relative"
                                                                onClick={() => handleInlineEdit('content', content)}
                                                            >
                                                                {content ? (
                                                                    <div 
                                                                        dangerouslySetInnerHTML={{ 
                                                                            __html: content.replace(/\n/g, '<br>') 
                                                                        }}
                                                                    />
                                                                ) : (
                                                                    <div className="text-gray-400 text-center py-16">
                                                                        <FileText className="h-16 w-16 mx-auto mb-4 opacity-50" />
                                                                        <p className="text-lg">Click here to start editing</p>
                                                                        <p className="text-sm">Add your content in PDF format</p>
                                                                    </div>
                                                                )}
                                                                <div className="absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition-opacity">
                                                                    <div className="bg-blue-600 text-white px-2 py-1 rounded-md text-xs">
                                                                        Click to edit
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        )}
                                                    </div>
                                                    
                                                    {/* PDF Footer */}
                                                    <div className="absolute bottom-8 left-8 right-8 text-center text-gray-500 text-sm border-t border-gray-200 pt-4">
                                                        <p>Page 1 of 1 | Generated by Template Editor</p>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            )}
                            
                            {/* Word count and shortcuts */}
                            <div className="mt-4 flex justify-between items-center text-sm text-gray-500">
                                <div className="flex items-center space-x-4">
                                    <span className="flex items-center space-x-1">
                                        <FileText className="h-4 w-4" />
                                        <span>{content.length} characters</span>
                                    </span>
                                    <span>{content.split(/\s+/).filter(word => word.length > 0).length} words</span>
                                    {viewMode === 'preview' && (
                                        <span className="flex items-center space-x-1 text-blue-600">
                                            <Edit3 className="h-4 w-4" />
                                            <span>PDF Editor Mode</span>
                                        </span>
                                    )}
                                    {isEditingInPDF && (
                                        <span className="flex items-center space-x-1 text-green-600">
                                            <Edit3 className="h-4 w-4" />
                                            <span>Editing in PDF</span>
                                        </span>
                                    )}
                                </div>
                                <div className="flex items-center space-x-4">
                                    <span>Press Esc to close</span>
                                    <span>Ctrl/Cmd + S to save</span>
                                    {viewMode === 'preview' && !isEditingInPDF && (
                                        <span className="text-blue-600">Click on content to edit directly</span>
                                    )}
                                    {isEditingInPDF && (
                                        <span className="text-green-600">Save or Cancel to finish editing</span>
                                    )}
                                </div>
                            </div>
                        </div>

                        {/* Footer */}
                        <div className="bg-gray-50 px-6 py-4 border-t border-gray-200">
                            <div className="flex justify-between items-center">
                                <div className="text-sm text-gray-500">
                                    Last saved: Never
                                </div>
                                <div className="flex space-x-3">
                                    <button
                                        onClick={generatePDF}
                                        disabled={isGeneratingPDF || !content.trim()}
                                        className={`px-6 py-2 rounded-lg flex items-center space-x-2 transition-all duration-200 ${
                                            isGeneratingPDF || !content.trim()
                                                ? 'bg-gray-300 text-gray-500 cursor-not-allowed'
                                                : 'bg-red-600 text-white hover:bg-red-700 shadow-lg hover:shadow-xl'
                                        }`}
                                    >
                                        {isGeneratingPDF ? (
                                            <div className="animate-spin rounded-full h-4 w-4 border-2 border-white border-t-transparent"></div>
                                        ) : (
                                            <Download className="h-4 w-4" />
                                        )}
                                        <span>{isGeneratingPDF ? 'Generating PDF...' : 'Download PDF'}</span>
                                    </button>
                                    <button
                                        onClick={handleClose}
                                        className="px-6 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors duration-200"
                                    >
                                        Cancel
                                    </button>
                                    <button
                                        onClick={handleSave}
                                        disabled={isSaving || !hasChanges}
                                        className={`px-6 py-2 rounded-lg flex items-center space-x-2 transition-all duration-200 ${
                                            isSaving || !hasChanges
                                                ? 'bg-gray-300 text-gray-500 cursor-not-allowed'
                                                : 'bg-gradient-to-r from-blue-600 to-purple-600 text-white hover:from-blue-700 hover:to-purple-700 shadow-lg hover:shadow-xl'
                                        }`}
                                    >
                                        {isSaving ? (
                                            <div className="animate-spin rounded-full h-4 w-4 border-2 border-white border-t-transparent"></div>
                                        ) : (
                                            <Save className="h-4 w-4" />
                                        )}
                                        <span>{isSaving ? 'Saving...' : 'Save Template'}</span>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    );
};

export default TemplateEditor;